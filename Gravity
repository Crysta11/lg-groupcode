require(GeNetIt)



setwd("C:\\Users\\Nathan\\Desktop\\Trial1Gravity\\Grav_Grav\\Gravity\\Genetics")
Dirs<-list.dirs(getwd(),recursive=FALSE)

##first two directories are IBR and IBD
for(j in 1:sum(length(Dirs)-2)){



#####DistMat and IBD distances will be consistent across each time step (time step151-651)
	IBR<-list.files(Dirs[1])

	DistMat<-as.matrix(read.csv(paste(c(Dirs[1],"/",IBR[j]),sep="",collapse=""),header=FALSE))
	PopDist<-as.matrix(DistMat[!duplicated(DistMat),!duplicated(DistMat)])

	IBD<-list.files(Dirs[2])
	IBDDist<-as.matrix(read.csv(paste(c(Dirs[2],"/",IBD[j]),sep="",collapse=""),header=FALSE))
	PopIBD<-as.matrix(IBDDist[!duplicated(IBDDist),!duplicated(IBDDist)])

##Since we didn't record habitat parameters when generating the files, use initial population assignments
## in lieu of habitat variables

#this code generated population sizes for gravity CDPOP input:
#results$prop.prop <- round((results$prop.landscape/total)*600+10)

	PopSize<-as.matrix(table(DistMat[,1]))
	PopSize<-PopSize[,1]
	habitat<-(PopSize-10)/600
	habitat1 <- t(matrix(c(habitat),length(habitat),length(habitat)))

####Genetic distances and extant populations may change dependent on the timestep
##Pass over the IBR and IBD directories

	setwd(Dirs[j+2])


#choose extant file directory

	directories<-list.dirs()

Extant<-list.files(directories[2])

##First directory is just ".", and second are Extant populations, so start at directory 3
for(k in 3:length(directories)){

##create output data frames
	OUT_gravity<-matrix(NA,ncol=3)
	OUT_glmm<-matrix(NA,ncol=3)

	genetics<-list.files(directories[k])

for(i in 1:length(genetics)){

		Gen<-as.matrix(read.csv(paste(c(directories[k],"/",genetics[i]),sep="",collapse=""),header=FALSE))
		diag(Gen)<-NA
		Gen<-as.vector(Gen)
		Gen<-na.omit(Gen)
		
		extant.pop<-as.matrix(read.csv(paste(c(directories[2],"/",Extant[i]),sep="",collapse=""),header=FALSE)) 


		pop1 <- t(matrix(c(extant.pop),length(extant.pop),length(extant.pop)))
		diag(pop1)<-NA
		pop1<-as.vector(pop1)
		pop1<-na.omit(pop1)
		
		pop2 <- (matrix(c(extant.pop),length(extant.pop),length(extant.pop)))
		diag(pop2)<-NA
		pop2<-as.vector(pop2)
		pop2<-na.omit(pop2)

		PopDist1<-PopDist[extant.pop[,1],extant.pop[,1]]
		diag(PopDist1)<-NA
		PopDist1<-as.vector(PopDist1)
		PopDist1<-na.omit(PopDist1)
		
		PopIBD1<-PopIBD[extant.pop[,1],extant.pop[,1]]
		diag(PopIBD1)<-NA
		PopIBD1<-as.vector(PopIBD1)
		PopIBD1<-na.omit(PopIBD1)
		
		habitat2<-habitat1[extant.pop[,1],extant.pop[,1]]
		diag(habitat2)<-NA
		habitat2<-as.vector(habitat2)
		habitat2<-na.omit(habitat2)
		
		Null<-rep(1,length.out=length(habitat2))

		PopDist1 <- scale(PopDist1)      # Each predictor variable is centred around the mean.
		PopIBD1<-scale(PopIBD1)	
		Gen<-scale(Gen)
		Hab<-scale(habitat2)	

	Distmat <- data.frame(pop1, pop2, PopDist1, PopIBD1, Hab, Gen, Null)


##Not sure of the difference, so there's a constrained and unconstrained model

mod_C<-gravity(y="Gen",x=c("Hab","PopDist1"),d="PopIBD1",group="pop1",data=Distmat,ln=TRUE,constrained=TRUE)
mod_NULL<-gravity(y="Gen",x="Null",d="PopIBD1",group="pop1",data=Distmat,ln=TRUE,constrained=TRUE)


mod_mixed<-gravity(y="Gen",x="PopDist1",d="PopIBD1",group="pop1",data=Distmat, ln=FALSE, constrained=TRUE)
mod_mixed_null<-gravity(y="Gen", x="Null",d="PopIBD1",group="pop1", data=Distmat, ln=FALSE, constrained=TRUE)



#Extract the RMSE value from the model... since it's in astring, need to cut it from the string

val_C<-summary(mod_C)
RootRsq_C<-as.numeric(unlist(regmatches(val_C,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",val_C))))

val_NULL<-summary(mod_NULL)
RootRsq_NULL<-as.numeric(unlist(regmatches(val_NULL,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",val_NULL))))

val_mixed<-summary(mod_mixed)
RootRsq_mixed<-as.numeric(unlist(regmatches(val_mixed,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",val_mixed))))

val_C<-summary(mod_mixed_null)
RootRsq_mixed_null<-as.numeric(unlist(regmatches(val_mixed_null,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",val_mixed_null))))
##bind the RMSE and AIC output

		delta.aic.grav<-mod_C$AIC-mod_NULL$AIC
		output_gravity<-cbind(RootRsq_C,RootRsq_NULL,delta.aic.grav)

		delta.aic.glmm<-mod_mixed$AIC-mod_mixed_null$AIC
		output_glmm<-cbind(RootRsq_mixed,RootRsq_mixed_null,delta.aic.glmm)

 #name the columns and rows
	colnames(output_gravity)<-c("RMSE","RMSE Null","delta AIC")
	rownames(output_graviy)<-genetics[i]

	colnames(output_glmm)<-c("RMSE","RMSE Null","delta AIC")
	rownames(output_glmm)<-genetics[i]

		OUT_gravity<-rbind(OUT_gravity,output_gravity)
		OUT_glmm<-rbind(OUT_glmm,output_glmm)

}

#omit the initial NAs
	OUT_gravity<-na.omit(OUT_gravity)
	OUT_glmm<-na.omit(OUT_glmm)

	write.csv(OUT_gravity, paste(c(getwd(),"/",directories[k],"_Grav",".csv"),sep="",collapse=""))
	write.csv(OUT_glmm, paste(c(getwd(),directories[k],j,"_GLMM",".csv"),sep="",collapse=""))
}


}
