library(PopGenReport)
library(gtools)
library(GeNetIt)


setwd("C:\\Users\\Nathan\\Desktop\\Trial1Gravity\\IBE_Analysis\\IBE")

Dirs<-list.dirs(getwd(),recursive=FALSE)

##first two directories are IBR and IBD

for(j in 1:sum(length(Dirs)-1)){

#####DistMat and IBD distances will be consistent across each time step (time step151-651)
	cost<-list.files(Dirs[1])
	DistMat<-as.matrix(read.csv(paste(c(Dirs[1],"/",cost[j]),sep="",collapse=""),header=FALSE))
	PopDist<-as.matrix(DistMat[1:40,1:40]) #can subset by 1:40 because all IBE populations are the same size
						#removing the duplicates did not work because habitat similarities were more
						#sometimes duplicated costs, so was inadvertently removing
						#extant populations

####Genetic distances and extant populations may change dependent on the timestep
##Pass over the IBR and IBD directories
	setwd(Dirs[j+1])
	directories<-list.dirs()

Extant<-mixedsort(list.files(directories[2]))
Extant
for(k in 3:length(directories)){

##create output data frame
	OUT<-matrix(NA,ncol=8)
	colnames(OUT)<-c("Grid","layer","coefficient","tstatistic","tpvalue","Fstat","Fpvalue","r2")


##choose genetic files
	genetics<-mixedsort(list.files(directories[k]))
genetics
for(i in 1:length(genetics)){
		Gen<-as.matrix(read.csv(paste(c(directories[k],"/",genetics[i]),sep="",collapse=""),header=FALSE))


##we subset the full cost-distance matrix to only the populations that are extant so matrices will match

		extant.pop<-as.matrix(read.csv(paste(c(directories[2],"/",Extant[i]),sep="",collapse=""),header=FALSE)) 

		PopDist1<-PopDist[extant.pop[,1],extant.pop[,1]]

	PopDist1 <- scale(PopDist1)
	Gen<-scale(Gen)

##because we only have one parameter we've simulated impacting dispersal for IBE, we list it as the Environmental cost
	EnvCost<-list(PopDist1)

##execute PopGenReport's analysis based on Wang et al. 2013 Evolution
	a<-lgrMMRR(Gen, EnvCost,eucl.mat= NULL, nperm = 999)

##The r^2 value and p-value are stored in the first line of output
##becuase we don't need the equations for the output, just extract the first line of output for each lgrMMR run
## and save that into the output matrix

	b<-cbind(genetics[i],a$mmrr.tab[1,])


	colnames(b)<-c("Grid","layer","coefficient","tstatistic","tpvalue","Fstat","Fpvalue","r2")

	OUT<-rbind(OUT,b)
}
	OUT<-na.omit(OUT)

	write.csv(OUT, paste(c(getwd(),directories[k],j,"_IBE",".csv"),sep="",collapse=""))
}
}
